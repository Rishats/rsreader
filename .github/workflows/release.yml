name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.22]  # Define the Go versions you want to test against
        os: [ubuntu-latest, windows-latest, macos-latest]  # Define the OS you want to build for
        arch: [amd64, arm, arm64]  # Define the architectures you want to build for

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        run: |
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
          GOARCH=${{ matrix.arch }}
          go build -v -o rsreader-${GOOS}-${GOARCH}-${{ matrix.go-version }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rsreader-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.go-version }}
          path: rsreader-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.go-version }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts (Ubuntu amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-amd64-1.22
          path: ./artifacts/ubuntu-latest-amd64-1.22
      - name: Download build artifacts (Ubuntu arm)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-arm-1.22
          path: ./artifacts/ubuntu-latest-arm-1.22
      - name: Download build artifacts (Ubuntu arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-arm64-1.22
          path: ./artifacts/ubuntu-latest-arm64-1.22
      - name: Download build artifacts (Windows amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-amd64-1.22
          path: ./artifacts/windows-latest-amd64-1.22
      - name: Download build artifacts (Windows arm)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-arm-1.22
          path: ./artifacts/windows-latest-arm-1.22
      - name: Download build artifacts (Windows arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-arm64-1.22
          path: ./artifacts/windows-latest-arm64-1.22
      - name: Download build artifacts (macOS amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-macos-latest-amd64-1.22
          path: ./artifacts/macos-latest-amd64-1.22
      - name: Download build artifacts (macOS arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-macos-latest-arm64-1.22
          path: ./artifacts/macos-latest-arm64-1.22

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Ubuntu amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-amd64-1.22/rsreader-ubuntu-latest-amd64-1.22
          asset_name: rsreader-ubuntu-latest-amd64-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Ubuntu arm)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-arm-1.22/rsreader-ubuntu-latest-arm-1.22
          asset_name: rsreader-ubuntu-latest-arm-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Ubuntu arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-arm64-1.22/rsreader-ubuntu-latest-arm64-1.22
          asset_name: rsreader-ubuntu-latest-arm64-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-amd64-1.22/rsreader-windows-latest-amd64-1.22
          asset_name: rsreader-windows-latest-amd64-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows arm)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-arm-1.22/rsreader-windows-latest-arm-1.22
          asset_name: rsreader-windows-latest-arm-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-arm64-1.22/rsreader-windows-latest-arm64-1.22
          asset_name: rsreader-windows-latest-arm64-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-latest-amd64-1.22/rsreader-macos-latest-amd64-1.22
          asset_name: rsreader-macos-latest-amd64-1.22
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-latest-arm64-1.22/rsreader-macos-latest-arm64-1.22
          asset_name: rsreader-macos-latest-arm64-1.22
          asset_content_type: application/octet-stream
