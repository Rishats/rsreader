name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.22]
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm, arm64]
        exclude:
          - os: macos-latest
            arch: arm  # Exclude unsupported darwin/arm combination

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set GOOS and GOARCH
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "GOOS=windows" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "GOOS=darwin" >> $GITHUB_ENV
          else
            echo "GOOS=linux" >> $GITHUB_ENV
          fi
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build
        run: |
          echo "Building for GOOS=${GOOS} GOARCH=${GOARCH}"
          go build -v -o rsreader-${GOOS}-${GOARCH}
          ls -la
          pwd

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rsreader-${{ env.GOOS }}-${{ env.GOARCH }}
          path: rsreader-${{ env.GOOS }}-${{ env.GOARCH }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts (Ubuntu amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-amd64
          path: ./artifacts/ubuntu-latest-amd64
      - name: Download build artifacts (Ubuntu arm)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-arm
          path: ./artifacts/ubuntu-latest-arm
      - name: Download build artifacts (Ubuntu arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-ubuntu-latest-arm64
          path: ./artifacts/ubuntu-latest-arm64
      - name: Download build artifacts (Windows amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-amd64
          path: ./artifacts/windows-latest-amd64
      - name: Download build artifacts (Windows arm)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-arm
          path: ./artifacts/windows-latest-arm
      - name: Download build artifacts (Windows arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-windows-latest-arm64
          path: ./artifacts/windows-latest-arm64
      - name: Download build artifacts (macOS amd64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-macos-latest-amd64
          path: ./artifacts/macos-latest-amd64
      - name: Download build artifacts (macOS arm64)
        uses: actions/download-artifact@v3
        with:
          name: rsreader-macos-latest-arm64
          path: ./artifacts/macos-latest-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Ubuntu amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-amd64/rsreader-ubuntu-amd64
          asset_name: rsreader-ubuntu-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Ubuntu arm)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-arm/rsreader-ubuntu-arm
          asset_name: rsreader-ubuntu-arm
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Ubuntu arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-latest-arm64/rsreader-ubuntu-arm64
          asset_name: rsreader-ubuntu-arm64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-amd64/rsreader-windows-amd64
          asset_name: rsreader-windows-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows arm)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-arm/rsreader-windows-arm
          asset_name: rsreader-windows-arm
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-arm64/rsreader-windows-arm64
          asset_name: rsreader-windows-arm64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-latest-amd64/rsreader-macos-amd64
          asset_name: rsreader-macos-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-latest-arm64/rsreader-macos-arm64
          asset_name: rsreader-macos-arm64
          asset_content_type: application/octet-stream
